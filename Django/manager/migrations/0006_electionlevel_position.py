# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-01 16:40
from __future__ import unicode_literals

from django.db import migrations, models

# def populate_election_level(apps, schema):

#     ElectionLevel = apps.get_model('manager', 'ElectionLevel')
#     for name in ELECTION_LEVELS:
#         el = ElectionLevel(name=name)
#         el.save()

def fix_election_levels_positions(apps, schema):

    ELECTION_LEVELS = (
      ('State',                                             10,  False),
      ('Territory',                                         20,  True),
      ('Federal',                                           30,  True),
      ('City',                                              40,  False),
      ('City Council',                                      50,  False),
      ('County',                                            60,  False),
      ('County Council',                                    70,  False),
      ('Judicial',                                          80,  False),
      ('Mayor & City Council',                              90,  False),
      ('School District',                                   100, False),
      ('Special District (water, fire, transit, library)',  110, False),
      ('State House District',                              120, False),
      ('State Senate District',                             130, False),
      ('Town',                                              140, False),
      ('Township',                                          150, False),
      ('Village',                                           160, False),
      ('Ward',                                              170, False),
      ('Other',                                             180, False),
    )

    ElectionLevel = apps.get_model('manager', 'ElectionLevel')
    for (name, position, is_new) in ELECTION_LEVELS:
        if is_new:
          el = ElectionLevel(name=name, position=position)
          el.save()
        else:
          el = ElectionLevel.objects.get(name=name)
          el.position = position
          el.save()


class Migration(migrations.Migration):

    dependencies = [
        ('manager', '0005_electiondatetype_position'),
    ]

    operations = [
        migrations.AddField(
            model_name='ElectionLevel',
            name='position',
            field=models.IntegerField(default=0),
        ),
        migrations.RunPython(fix_election_levels_positions),
    ]
