# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-24 14:14
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(max_length=64)),
                ('address_2', models.CharField(max_length=64)),
                ('address_3', models.CharField(max_length=64)),
                ('city', models.CharField(max_length=64)),
                ('state', models.CharField(choices=[('', 'State'), ('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('AS', 'American Samoa'), ('GU', 'Guam'), ('MP', 'Commonwealth of the Northern Mariana Islands'), ('PR', 'Puerto Rico'), ('VI', 'United States Virgin Islands')], default=('', 'State'), max_length=2)),
                ('zip', models.CharField(blank=True, max_length=5, null=True)),
                ('zip_4', models.CharField(blank=True, max_length=4, null=True)),
                ('other_address_details', models.TextField()),
            ],
            options={
                'db_table': 'address',
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'address_type',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=32, null=True)),
                ('last_name', models.CharField(blank=True, max_length=32, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('fax', models.CharField(blank=True, max_length=64, null=True)),
                ('other', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contact_person',
            },
        ),
        migrations.CreateModel(
            name='ContactPersonType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'contact_person_type',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=1024)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=64)),
                ('state_geoid', models.CharField(db_index=True, max_length=2)),
                ('election_status', models.CharField(choices=[('A', 'Approved'), ('P', 'Pending'), ('Z', 'Archived'), ('D', 'Deleted')], default='P', max_length=2)),
                ('election_day_registration_is_available', models.BooleanField(default=False)),
                ('use_overseas_dates_as_military_dates', models.BooleanField(default=False)),
                ('election_date', models.DateField()),
                ('is_public', models.BooleanField(default=True)),
                ('additional_information', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'election',
                'ordering': ['election_date'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='ElectionDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('DRD', 'Domestic Registration Deadline'), ('DBRD', 'Domestic Ballot Request Deadline'), ('DBSD', 'Domestic Ballot Submission Deadline'), ('ORD', 'Overseas Registration Deadline'), ('OBRD', 'Overseas Ballot Request Deadline'), ('OBSD', 'Overseas Ballot Submission Deadline'), ('MRD', 'Military Registration Deadline'), ('MBRD', 'Military Ballot Request Deadline'), ('MBSD', 'Military Ballot Submission Deadline'), ('EVF', 'Early Voting From'), ('EVT', 'Early Voting To'), ('AVF', 'In-Person Absentee Voting From'), ('AVT', 'In-Person Absentee Voting To')], default=('DRD', 'Domestic Registration Deadline'), max_length=4)),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('time_zone', timezone_field.fields.TimeZoneField(blank=True, choices=[('US/Alaska', 'US/Alaska'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific')])),
            ],
            options={
                'db_table': 'election_date',
                'ordering': ['kind', 'date_type', 'date'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='ElectionDateType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('date_format', models.CharField(max_length=32)),
                ('time_format', models.CharField(max_length=32)),
                ('format', models.CharField(max_length=256)),
                ('default', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'election_date_type',
                'ordering': ['id'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='ElectionLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'election_level',
                'ordering': ['id'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='ElectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('priority', models.IntegerField()),
            ],
            options={
                'db_table': 'election_type',
                'ordering': ['priority', 'name'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='manager.Election')),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_type', models.CharField(choices=[('U', 'Unknown'), ('S', 'State'), ('C', 'County'), ('CS', 'County Subdivision'), ('SE', 'School District Elementary'), ('SS', 'School District Secondary'), ('SU', 'School District Unified'), ('CD', 'Congressional District 114th')], db_index=True, default='U', max_length=2)),
                ('geoid', models.CharField(db_index=True, max_length=12)),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='manager.Election')),
            ],
            options={
                'db_table': 'location',
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('url', models.URLField(max_length=1024)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='manager.Election')),
            ],
            options={
                'db_table': 'url',
                'ordering': ['url'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='URLType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'url_type',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.AddField(
            model_name='url',
            name='url_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='manager.URLType'),
        ),
        migrations.AddField(
            model_name='electiondate',
            name='date_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='manager.ElectionDateType'),
        ),
        migrations.AddField(
            model_name='electiondate',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='manager.Election'),
        ),
        migrations.AddField(
            model_name='election',
            name='election_level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='manager.ElectionLevel'),
        ),
        migrations.AddField(
            model_name='election',
            name='election_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='manager.ElectionType'),
        ),
        migrations.AddField(
            model_name='election',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactperson',
            name='contact_person_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='manager.ContactPersonType'),
        ),
        migrations.AddField(
            model_name='contactperson',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_persons', to='manager.Election'),
        ),
        migrations.AddField(
            model_name='address',
            name='address_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='manager.AddressType'),
        ),
        migrations.AddField(
            model_name='address',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='manager.Election'),
        ),
    ]
